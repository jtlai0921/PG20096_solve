練習問題9-1
請將List 9-3的陣列str宣告改寫如下： 
	char str[] = "ABC\0DEF";
並請執行該程式確認其執行結果。

List9-3
/*
存放字串的陣列（初始化）
*/										
#include  <stdio.h>	
int main(void)	
{
    char  str[] = "ABC";		/* 初始化 */
    printf("字串str為%s。\n", str);	/* 輸出顯示 */
    return (0);
}


程式碼
/*
  顯示以"ABC\0DEF"進行初始化的字串
*/

#include <stdio.h>

int main(void)
{
    char str[] = "ABC\0DEF";        /* 字串中出現空字元 */

    printf("字串str是%s。\n", str); /* 顯示 */

    return (0);
}

執行結果
字串str是ABC。



練習問題9-2
如欲將下列初始化字串str改為空字串時，應如何處理？請逐一寫出。
char  str[] = "ABC";

程式碼
/* 
  將字串變成空字串
*/

#include <stdio.h>

int main(void)
{
    char str[] = "ABC";

    printf("str＝%s\n", str);        /* str是ABC" */

    str[0] = '\0';                   /* 將空字元代入到陣列的最前面元素 */

    puts("已將字串str改成空字串。");
    printf("str＝%s\n", str);

    return (0);                      /* str是空字串 */
}

執行結果
str＝ABC
已將字串str改成空字串。
str＝




練習問題9-3
請設計一個符合下列條件的函式：若字串str中含有字元c時（若有複數個相同字元，則指開頭第一個），則傳回該註標值；若否，則傳回 - 1。
int str_char(const char str[], int c)  { /* … */}

程式碼
/*
  調查字串中是否包含特定字元的函式
*/

#include <stdio.h>

/*--- 傳回字串str中最先出現的字元c的註標值 ---*/
int str_char(const char str[], int c)
{
    int i;

    for (i = 0; str[i] != '\0'; i++)
        if (str[i] == C)
            return (i);
    return (-1);
}


int main(void)
{
    int no;
    char ch[10];

    printf("請輸入英文字：");
    scanf("%s", ch);

    no = str_char("ABCDEFGHIJKLMNOPQRSTUVWXYZ"
                  "abcdefghijklmnopqrstuvwxyz", ch[0]);

if (no >= 0 && no <= 25)
    printf("那是大寫字母的第%d個字元。\n", no + 1);
else if (no >= 26 && no <= 51)
    printf("那是小寫字母的第%d個字元。\n", no -25);
else 
    printf("那不是英文字母。\n");

    return (0);
}     


執行範例
請輸入英文字：E
那是大寫字母的第5個字元。




練習問題9-4
請設計一個能傳回字串str中所含字元c個數的函式
int str_chnum(const char str[], int c)  { /* … */}

程式碼
/*
  傳回字串中包含的特定字元的個數
*/

#include <stdio.h>

/*--- 傳回字串str中所含字元c的個數 ---*/

int str_chnum(const char str[], int c)
{
    int i;
    int count = 0;

    for (i = 0; str[i] != '\n'; i++)
        if (str[i] == c)
            count++;
    return (count);
}

int main(void)
{
    char str[256];
    char ch[10];

    printf("請輸入字串：");
    scanf("%s", str);

    printf("請輸入要檢索的字串：");
    scanf("%s", ch);

    printf("該字元共有%d個。\n", str_chnum(str, ch[0]));
 
    return (0);
}
    
執行範例
請輸入字串：opqrst
請輸入要檢索的字串：r
該字元共有1個。



練習9-5
請設計一個與List 9-9（顯示陣列str中存放的字串）之函式put_string操作相同的函式，但限用printf函式，不可使用putchar函式。

List9-9
/*
  一個字、一個字輸出字串（使用putchar函式）
*/										
#include  <stdio.h>	
/*---輸出字串（不換行）---*/
void put_string(const char str[])
{
    unsigned  i = 0;
    while (str[i])
    putchar(str[i++]);
}
int main(void)
{
    char  str[100];
    printf("請輸入一個字串:");
    scanf("%s", str);
    put_string(str);
    putchar('\n');
    return (0);
}


程式碼
/*
  一個字、一個字輸出字串（使用printf函式）
*/										
#include  <stdio.h>	
/*---輸出字串（不換行）---*/
void put_string(const char str[])
{
    printf("%s", str);
}

int main(void)
{
    char  str[100];

    printf("請輸入一個字串:");
    scanf("%s", str);

    put_string(str);
    putchar('\n');

    return (0);
}

執行範例
請輸入一個字串:SEC
SEC


練習問題9-6
請設計一個能連續no次輸出字串str的函式
void put_stringn(const char str[], int no)  { /* … */}

程式碼
/*
  依指定次數連續顯示字串的函式
*/

#include <stdio.h>

/*--- 連續no次顯示字串str ---*/
void put_stringn(const char str[], int no)
{
    while (no-- > 0)
        printf("%s", str);
}

int main(void)
{
    char str[100];
    int no;

    printf("請輸入字串：");        scanf("%s", str);
    printf("請問要顯示幾次：");    scanf("%d", &no);

    put_stringn(str, no);
    putchar('\n');

    return (0);
}
 
執行範例
請輸入字串：string
請問要顯示幾次：3
stringstringstring



練習問題9-7
請參考List 9-9的函式，設計一個由後向前反序輸出字串（如收到 "SEC"，則輸出 "CES"）的函式put_string。

List9-9
/*
  一個字、一個字輸出字串（使用putchar函式）
*/										
#include  <stdio.h>	
/*---輸出字串（不換行）---*/
void put_string(const char str[])
{
    unsigned  i = 0;
    while (str[i])
    putchar(str[i++]);
}
int main(void)
{
    char  str[100];
    printf("請輸入一個字串:");
    scanf("%s", str);
    put_string(str);
    putchar('\n');
    return (0);
}

程式碼
/*
  由後向前反序輸出字串的函式
*/

#include <stdio.h>

/*--- 傳回字串str的長度 ---*/

unsigned str_length(const char str[])
{
    unsigned len = 0;
    while (str[len])
        len++;
    return (len); 
}

/*--- 由後向前反序顯示字串 ---*/
void put_rstring(const char str[])
{
    unsigned i = str_length(str);
    while (i-- >0)
        putchar(str[i]);
}

int main(void)
{
    char str[100];

    printf("請輸入字串：");
    scanf("%s", str);

    printf("由後向前反序顯示為");
    put_rstring(str);
    puts("。");

    return (0);
}


執行範例
請輸入字串：SEC
由後向前反序顯示為CES。




練習問題9-8
請設計一個能將字串str反序存入的函式
void rev_string(char str[])  { /* … */}

程式碼
/*
  將字串str反序存入
*/

#include <stdio.h>

/*--- 傳回字串str的長度 ---*/
unsigned str_length(const char str[])
{
    unsigned len = 0;
    while (str[len])
        len++;
    return (len);
}

/*--- 將字串str反序排列 ---*/ 
void rev_string(char str[])
{
    int i;
    int len = str_length(str);
    for (i= 0; i < len / 2; i++) {
        char temp    = str[i];
        str[i]       = str[len-i-1];
        str[len-i-1] = temp;
    }
}

int main(void)
{
    char str[100];

    printf("str＝");
    scanf("%s", str);  

    rev_string(str);         /* 將字串反序排列 */        

    puts("已將字串str反序排列。");   
    printf("str＝");
    puts(str);

    return (0);
}       
   
執行範例
str＝SEC
已將字串str反序排列。
str＝CES




練習問題9-9
請設計一個能將字串str轉為空字串的函式。
void null_string(char str[])  { /* … */ }

程式碼
/*
  將字串改成空字串的函式
*/

#include <stdio.h>

/*--- 將字串str改成空字串 ---*/
void null_string(char str[])
{
    str[0] = '\0';
}

int main(void)
{
    char str[] = "ABC";

    printf("str＝%s\n", str);

    null_string(str);           /* 將字串改成空字串 */

    puts("已將字串str改成空字串。");
    printf("str＝%s\n", str);

    return (0);
}

執行結果
str＝ABC
已將字串str改成空字串。
str＝



練習問題9-10
請設計一個能刪除字串str內所有數字字元的函式。（例如：收到 "AB1C9" 時，則輸出 "ABC"） 
void del_digit(char str[])  { /* … */ }

程式碼
/*
  請刪除字串中數字字元的函式
*/

#include <stdio.h>

/*--- 請刪除字串str中的數字字元 ---*/
void del_digit(char str[])
{
    int i = 0, idx = 0;

    while (str[i]) {
        if (str[i] < '0' || str[i] > '9')
            str[idx++] = str[i];
        i++;
    }
    str[idx] = '\n';
}

int main(void)
{
    char str[100];

    printf("請輸入字串：");  
    scanf("%s", str);

    del_digit(str);            /* 刪除數字字元 */

    puts("請刪除數字字元。");
    printf("str＝%s\n", str);

    return (0);
}

執行範例
請輸入字串：AB1C9
請刪除數字字元。
str＝ABC






